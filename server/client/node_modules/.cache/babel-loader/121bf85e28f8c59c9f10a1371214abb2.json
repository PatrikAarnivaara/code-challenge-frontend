{"ast":null,"code":"var _jsxFileName = \"/Users/patrik/code-challenge-frontend/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport unsplash from '../api/unsplash';\nimport Photo from './Photo/Photo';\nimport { createUseStyles } from 'react-jss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = createUseStyles({\n  container: {\n    margin: 'auto',\n    padding: '2em'\n  }\n});\n\nfunction App() {\n  _s();\n\n  const classes = useStyles();\n  const [images, setImages] = useState([]);\n  const [loaded, setIsLoaded] = useState(false);\n  const getPhotosFromUnsplash = useCallback(async () => {\n    try {\n      const response = await unsplash.get('photos');\n\n      if (response.status === 200) {\n        setImages([...images, ...response.data]);\n        setIsLoaded(true);\n      }\n    } catch (error) {\n      console.log(error);\n      /* add message to client */\n    }\n  });\n  useEffect(() => {\n    getPhotosFromUnsplash();\n  }, [\n    /* getPhotosFromUnsplash */\n  ]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: images,\n      next: () => getPhotosFromUnsplash,\n      hasMore: true,\n      loader: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://res.cloudinary.com/chuloo/image/upload/v1550093026/scotch-logo-gif_jq4tgr.gif\",\n        alt: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 6\n      }, this),\n      children: loaded ? /*#__PURE__*/_jsxDEV(Photo, {\n        images: images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }, this) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"uNEgsyPpOtQbpWTw+K80qdBbTH0=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/patrik/code-challenge-frontend/src/components/App.jsx"],"names":["React","useCallback","useEffect","useState","InfiniteScroll","unsplash","Photo","createUseStyles","useStyles","container","margin","padding","App","classes","images","setImages","loaded","setIsLoaded","getPhotosFromUnsplash","response","get","status","data","error","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,eAAT,QAAgC,WAAhC;;AAEA,MAAMC,SAAS,GAAGD,eAAe,CAAC;AACjCE,EAAAA,SAAS,EAAE;AACVC,IAAAA,MAAM,EAAE,MADE;AAEVC,IAAAA,OAAO,EAAE;AAFC;AADsB,CAAD,CAAjC;;AAOA,SAASC,GAAT,GAAe;AAAA;;AACd,QAAMC,OAAO,GAAGL,SAAS,EAAzB;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACa,MAAD,EAASC,WAAT,IAAwBd,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMe,qBAAqB,GAAGjB,WAAW,CAAC,YAAY;AACrD,QAAI;AACH,YAAMkB,QAAQ,GAAG,MAAMd,QAAQ,CAACe,GAAT,CAAa,QAAb,CAAvB;;AACA,UAAID,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AAC5BN,QAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAY,GAAGK,QAAQ,CAACG,IAAxB,CAAD,CAAT;AACAL,QAAAA,WAAW,CAAC,IAAD,CAAX;AACA;AACD,KAND,CAME,OAAOM,KAAP,EAAc;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA;AACA;AACD,GAXwC,CAAzC;AAaArB,EAAAA,SAAS,CAAC,MAAM;AACfgB,IAAAA,qBAAqB;AACrB,GAFQ,EAEN;AAAC;AAAD,GAFM,CAAT;AAIA,sBACC;AAAK,IAAA,SAAS,EAAEL,OAAO,CAACJ,SAAxB;AAAA,2BACC,QAAC,cAAD;AACC,MAAA,UAAU,EAAEK,MADb;AAEC,MAAA,IAAI,EAAE,MAAMI,qBAFb;AAGC,MAAA,OAAO,EAAE,IAHV;AAIC,MAAA,MAAM,eACL;AACC,QAAA,GAAG,EAAC,uFADL;AAEC,QAAA,GAAG,EAAC;AAFL;AAAA;AAAA;AAAA;AAAA,cALF;AAAA,gBAWEF,MAAM,gBAAG,QAAC,KAAD;AAAO,QAAA,MAAM,EAAEF;AAAf;AAAA;AAAA;AAAA;AAAA,cAAH,GAA+B;AAXvC;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAiBA;;GAvCQF,G;UACQJ,S;;;KADRI,G;AAyCT,eAAeA,GAAf","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport unsplash from '../api/unsplash';\nimport Photo from './Photo/Photo';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n\tcontainer: {\n\t\tmargin: 'auto',\n\t\tpadding: '2em',\n\t},\n});\n\nfunction App() {\n\tconst classes = useStyles();\n\tconst [images, setImages] = useState([]);\n\tconst [loaded, setIsLoaded] = useState(false);\n\n\tconst getPhotosFromUnsplash = useCallback(async () => {\n\t\ttry {\n\t\t\tconst response = await unsplash.get('photos');\n\t\t\tif (response.status === 200) {\n\t\t\t\tsetImages([...images, ...response.data]);\n\t\t\t\tsetIsLoaded(true);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\t/* add message to client */\n\t\t}\n\t});\n\n\tuseEffect(() => {\n\t\tgetPhotosFromUnsplash();\n\t}, [/* getPhotosFromUnsplash */]);\n\n\treturn (\n\t\t<div className={classes.container}>\n\t\t\t<InfiniteScroll\n\t\t\t\tdataLength={images}\n\t\t\t\tnext={() => getPhotosFromUnsplash}\n\t\t\t\thasMore={true}\n\t\t\t\tloader={\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc=\"https://res.cloudinary.com/chuloo/image/upload/v1550093026/scotch-logo-gif_jq4tgr.gif\"\n\t\t\t\t\t\talt=\"loading\"\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{loaded ? <Photo images={images} /> : ''}\n\t\t\t</InfiniteScroll>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}