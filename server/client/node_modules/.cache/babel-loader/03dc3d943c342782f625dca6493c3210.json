{"ast":null,"code":"var _jsxFileName = \"/Users/patrik/code-challenge-frontend/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport unsplash from '../api/unsplash';\nimport Photo from './Photo/Photo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = createUseStyles({\n  container: {\n    display: 'grid',\n    gridGap: '10px'\n  }\n});\n\nfunction App() {\n  _s();\n\n  const [images, setImages] = useState([]);\n\n  const getPhotosFromUnsplash = async () => {\n    try {\n      const response = await unsplash.get('photos');\n\n      if (response.status === 200) {\n        setImages(response.data);\n        console.log(response.data);\n      }\n    } catch (error) {\n      console.log(error);\n      /* add message to client */\n    }\n  };\n\n  useEffect(() => {\n    getPhotosFromUnsplash();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Photo, {\n      images: images\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"ScKwoilS3xNJP1q5r1COmrAdDIM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/patrik/code-challenge-frontend/src/components/App.jsx"],"names":["React","useEffect","useState","unsplash","Photo","useStyles","createUseStyles","container","display","gridGap","App","images","setImages","getPhotosFromUnsplash","response","get","status","data","console","log","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,KAAP,MAAkB,eAAlB;;AACA,MAAMC,SAAS,GAAGC,eAAe,CAAC;AAAEC,EAAAA,SAAS,EAAE;AAAEC,IAAAA,OAAO,EAAE,MAAX;AAAmBC,IAAAA,OAAO,EAAE;AAA5B;AAAb,CAAD,CAAjC;;AACA,SAASC,GAAT,GAAe;AAAA;;AACd,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMW,qBAAqB,GAAG,YAAY;AACzC,QAAI;AACH,YAAMC,QAAQ,GAAG,MAAMX,QAAQ,CAACY,GAAT,CAAa,QAAb,CAAvB;;AACA,UAAID,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AAC5BJ,QAAAA,SAAS,CAACE,QAAQ,CAACG,IAAV,CAAT;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACG,IAArB;AACA;AACD,KAND,CAME,OAAOG,KAAP,EAAc;AACfF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA;AACA;AACD,GAXD;;AAaAnB,EAAAA,SAAS,CAAC,MAAM;AACfY,IAAAA,qBAAqB;AACrB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACC;AAAA,2BACC,QAAC,KAAD;AAAO,MAAA,MAAM,EAAEF;AAAf;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAKA;;GAzBQD,G;;KAAAA,G;AA2BT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport unsplash from '../api/unsplash';\nimport Photo from './Photo/Photo';\nconst useStyles = createUseStyles({ container: { display: 'grid', gridGap: '10px' } });\nfunction App() {\n\tconst [images, setImages] = useState([]);\n\n\tconst getPhotosFromUnsplash = async () => {\n\t\ttry {\n\t\t\tconst response = await unsplash.get('photos');\n\t\t\tif (response.status === 200) {\n\t\t\t\tsetImages(response.data);\n\t\t\t\tconsole.log(response.data)\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\t/* add message to client */\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tgetPhotosFromUnsplash();\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t<Photo images={images} />\n\t\t</div>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}